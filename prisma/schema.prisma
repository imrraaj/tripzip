// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String               @id @default(cuid())
  name               String?
  email              String?              @unique
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  Hotel_bookings     Hotel_bookings[]
  Transport_bookings Transport_bookings[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Bus {
  id               String   @id @default(cuid())
  from             String
  to               String
  arrival_time     DateTime
  departure_time   DateTime
  total_seats      Int
  vacant_seats     Int
  price            Float
  operator_name    String
  operator_contact String
}

model Train {
  id                 String               @id @default(cuid())
  from               String
  to                 String
  arrival_time       DateTime
  departure_time     DateTime
  total_seats        Int
  vacant_seats       Int
  price              Float
  operator_name      String
  operator_contact   String
  Transport_bookings Transport_bookings[]
}

model Flight {
  id               String   @id @default(cuid())
  from             String
  to               String
  arrival_time     DateTime
  departure_time   DateTime
  total_seats      Int
  vacant_seats     Int
  price            Float
  operator_name    String
  operator_contact String
}

model Hotel {
  id             String           @id @default(cuid())
  name           String
  price          Float
  total_rooms    Int
  vacant_rooms   Int
  amenities      String
  rating         Float
  owner_contact  String
  Hotel_bookings Hotel_bookings[]
}

model RHomes {
  id            String @id @default(cuid())
  name          String
  price         Float
  total_rooms   Int
  amenities     String
  rating        Float
  owner_contact String
}

model Transport_bookings {
  id             String    @id @default(cuid())
  userId         String
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  trainId        String
  train          Train     @relation(fields: [trainId], references: [id], onDelete: Cascade)
  name           String
  price          Float
  no_of_seats    Int
  arrival_time   DateTime?
  departure_time DateTime?
}

model Hotel_bookings {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  hotelId         String
  hotel           Hotel     @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  name            String
  number_of_rooms Int
  checkIn         DateTime?
  checkOut        DateTime?
  price           Float
}
